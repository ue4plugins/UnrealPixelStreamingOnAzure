{
  "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
  "handler": "Microsoft.Azure.CreateUIDef",
  "version": "0.1.2-preview",
  "parameters": {
    "config": {
      "basics": {
        "resourceGroup": {
          "allowExisting": false
        }
      }
    },
    "basics": [
      {
        "name": "regionInfoBox",
        "type": "Microsoft.Common.InfoBox",
        "visible": true,
        "options": {
          "icon": "Info",
          "text": "The global resource group is deployed at the specified region (above). It stores all global resources such as the Traffic Manager, Key Vault and Application Insights."
        }
      },
      {
        "name": "vmSizeSS",
        "type": "Microsoft.Compute.SizeSelector",
        "label": "UE App GPU VM Size",
        "toolTip": "The size of the virtual machines where the UE4 or UE5 3D App and Signalling Server is installed.",
        "recommendedSizes": [
          "Standard_NV12s_v3",
          "Standard_NV24s_v3",
          "Standard_NV48s_v3",
          "Standard_NC4as_T4_v3",
          "Standard_NC8as_T4_v3",
          "Standard_NC16as_T4_v3",
          "Standard_NV36ads_A10_v5"
        ],
        "constraints": {
          "allowedSizes": [
            "Standard_NC4as_T4_v3",
            "Standard_NC8as_T4_v3",
            "Standard_NC16as_T4_v3",
            "Standard_NC64as_T4_v3",
            "Standard_NV12s_v3",
            "Standard_NV24s_v3",
            "Standard_NV48s_v3",
            "Standard_NV6ads_A10_v5",
            "Standard_NV12ads_A10_v5",
            "Standard_NV18ads_A10_v5",
            "Standard_NV36ads_A10_v5",
            "Standard_NV36adms_A10_v5",
            "Standard_NV72ads_A10_v5"
          ]
        },
        "osPlatform": "Windows",
        "imageReference": {
          "publisher": "MicrosoftWindowsDesktop",
          "offer": "Windows-10",
          "sku": "20h2-pro"
        }
      },
      {
        "name": "vmSizeMM",
        "type": "Microsoft.Compute.SizeSelector",
        "label": "Matchmaker VM Size",
        "toolTip": "The size of the virtual machine where the Matchmaking Server is installed.",
        "recommendedSizes": [
          "Standard_F4s_v2"
        ],
        "osPlatform": "Windows",
        "imageReference": {
          "publisher": "MicrosoftWindowsServer",
          "offer": "WindowsServer",
          "sku": "2019-Datacenter"
        }
      },
      {
        "name": "customImage",
        "type": "Microsoft.Solutions.ResourceSelector",
        "label": "Select an optional custom image for Signaling Server",
        "toolTip": "Select an optional custom image with the UE pre-reqs, nodejs and your exported unreal app (in c:\\app), which can improve the spin up and scale time",
        "resourceType": "Microsoft.Compute/galleries/images",
        "options": {
          "filter": {
            "subscription": "onBasics",
            "location": "all"
          }
        }
      },
      {
        "name": "uploadTextBlock",
        "type": "Microsoft.Common.TextBlock",
        "visible": "[equals(basics('customImage').name, '')]",
        "options": {
          "text": "Zip up the entire exported 'WindowsNoEditor' folder, upload it to Blob Storage and select it below. This should have your 1) <UE App name>.exe,  2) <UE App name>\\ folder and 3) Engine\\ files in the WindowsNoEditor folder.",
          "link": {
            "label": "See Unreal Engine docs on exporting out a Pixel Streaming project",
            "uri": "https://docs.unrealengine.com/4.27/en-US/ProductionPipelines/CloudDeployments/AzurePixelStreaming/#packagingapixelstreamingapplication"
          }
        }
      },
      {
        "name": "zipDocLink",
        "type": "Microsoft.Common.InfoBox",
        "visible": true,
        "options": {
          "icon": "Warning",
          "text": "BEFORE making any customizations to Matchmaker or SignallingWebServer folders it's CRITICAL to download the Azure modifications by clicking [this box] and following the README.txt to manually merge our modifications so that it deploys successfully in Azure. Failure to follow the directions for preparing your deployment for Azure will cause the solution to not load upon deployment. If you didn't make any Matchmaker or Signalling Web Server modifications, leave the box below unchecked (recommended for first easy deployment).",
          "uri": "https://unrealbackendfiles.blob.core.windows.net/ourpublicblobs/WebServers_Marketplace_4.27.2.zip"
        }
      },
      {
        "name": "storageBlobSelection",
        "type": "Microsoft.Common.FileUpload",
        "visible": "[equals(basics('customImage').name, '')]",
        "toolTip": "Select Unreal Pixel Streaming package to upload (follow strict instructions for packaging in above documentation).",
        "label": "Pixel Streaming Package File Upload (.zip)",
        "options": {
          "text": "Select .Zip file",
          "uploadMode": "URL"
        },
        "constraints": {
          "required": "false",
          "allowedFileExtensions": [
            "zip"
          ]
        }
      },
      {
        "name": "modificationsTextBlock",
        "type": "Microsoft.Common.TextBlock",
        "visible": true,
        "options": {
          "text": "Checking the below box will not override any Matchmaker or Signalling Web Server files on your deployment with base functionality for Azure. This assumes you have manually added this functionality from the directions above.",
          "link": {
            "label": "See required docs on preparing your build for Azure.",
            "uri": "https://unrealbackendfiles.blob.core.windows.net/ourpublicblobs/WebServers_Marketplace_4.27.2.zip"
          }
        }
      },
      {
        "name": "modificationsCheckBox",
        "type": "Microsoft.Common.CheckBox",
        "label": "I have made custom modifications to the Matchmaker and Signalling Web Server.",
        "toolTip": "Check if you made modifications to the Matchmaker and Signalling Web Server files, and don't want your changes overriden.",
        "constraints": {
          "required": false
        }
      },
      {
        "name": "adminUsername",
        "type": "Microsoft.Compute.UserNameTextBox",
        "label": "Admin username",
        "toolTip": "Admin username for the Matchmaker and Signalling Server VMs.",
        "osPlatform": "Windows"
      },
      {
        "name": "adminPassword",
        "type": "Microsoft.Compute.CredentialsCombo",
        "label": {
          "password": "Password",
          "confirmPassword": "Confirm password"
        },
        "toolTip": {
          "password": "Admin password for the Matchmaker and Signalling Server VMs."
        },
        "constraints": {
          "required": true
        },
        "options": {
          "hideConfirmation": false
        },
        "osPlatform": "Windows",
        "visible": true
      }
    ],
    "steps": [
      {
        "name": "scaleConfig",
        "label": "Scale",
        "subLabel": {
          "preValidation": "Configure the scale and autoscale policies",
          "postValidation": "Done"
        },
        "bladeTitle": "Scale",
        "elements": [
          {
            "name": "scaleTextBlock",
            "type": "Microsoft.Common.TextBlock",
            "visible": true,
            "options": {
              "text": "The UE application is deployed to one or more regions. For each region, a resource group is created that stores the Virtual Machine Scale Set (VMSS) for the GPU nodes that have the 3D app and Signalling Server, the Matchmaker VM and Virtual Network resources.",
              "link": {
                "label": "Learn more",
                "uri": "https://github.com/Azure/Unreal-Pixel-Streaming#architecture"
              }
            }
          },
          {
            "name": "regionQuotaInfo",
            "type": "Microsoft.Common.InfoBox",
            "visible": true,
            "options": {
              "icon": "Warning",
              "text": "When selecting regions, please keep in mind that your subscription has quota for the selected regions and VM size. Click here to view your subscription's quotas.",
              "uri": "[concat('https://ms.portal.azure.com/#@', subscription().tenantId, '/resource/subscriptions/', subscription().subscriptionId, '/quotas')]"
            }
          },
          {
            "name": "moreThanFourRegionsWarning",
            "type": "Microsoft.Common.InfoBox",
            "visible": "[greaterOrEquals(length(steps('scaleConfig').regionsSelected), 5)]",
            "options": {
              "icon": "Warning",
              "text": "Please don't select more than 4 as we ignore extra regions during deployment."
            }
          },
          {
            "name": "regionsSelected",
            "type": "Microsoft.Common.DropDown",
            "label": "Select regions to deploy (1 min, 4 max).",
            "defaultValue": [
              "East US"
            ],
            "toolTip": "Select the regions a Matchmaker and App/Signalling will be deployed (for lowest latency). A Traffic Manager will redirect the user to the closest region.",
            "multiselect": true,
            "selectAll": false,
            "filter": true,
            "filterPlaceholder": "Filter regions ...",
            "multiLine": false,
            "constraints": {
              "allowedValues": [
                {
                  "label": "East Asia",
                  "value": "eastasia"
                },
                {
                  "label": "Southeast Asia",
                  "value": "southeastasia"
                },
                {
                  "label": "Central US",
                  "value": "centralus"
                },
                {
                  "label": "East US",
                  "value": "eastus"
                },
                {
                  "label": "East US 2",
                  "value": "eastus2"
                },
                {
                  "label": "West US",
                  "value": "westus"
                },
                {
                  "label": "North Central US",
                  "value": "northcentralus"
                },
                {
                  "label": "South Central US",
                  "value": "southcentralus"
                },
                {
                  "label": "North Europe",
                  "value": "northeurope"
                },
                {
                  "label": "West Europe",
                  "value": "westeurope"
                },
                {
                  "label": "Japan West",
                  "value": "japanwest"
                },
                {
                  "label": "Japan East",
                  "value": "japaneast"
                },
                {
                  "label": "Brazil South",
                  "value": "brazilsouth"
                },
                {
                  "label": "Australia East",
                  "value": "australiaeast"
                },
                {
                  "label": "Australia Southeast",
                  "value": "australiasoutheast"
                },
                {
                  "label": "South India",
                  "value": "southindia"
                },
                {
                  "label": "Central India",
                  "value": "centralindia"
                },
                {
                  "label": "West India",
                  "value": "westindia"
                },
                {
                  "label": "Canada Central",
                  "value": "canadacentral"
                },
                {
                  "label": "Canada East",
                  "value": "canadaeast"
                },
                {
                  "label": "UK South",
                  "value": "uksouth"
                },
                {
                  "label": "UK West",
                  "value": "ukwest"
                },
                {
                  "label": "West Central US",
                  "value": "westcentralus"
                },
                {
                  "label": "West US 2",
                  "value": "westus2"
                },
                {
                  "label": "Korea Central",
                  "value": "koreacentral"
                },
                {
                  "label": "Korea South",
                  "value": "koreasouth"
                },
                {
                  "label": "France Central",
                  "value": "francecentral"
                },
                {
                  "label": "France South",
                  "value": "francesouth"
                },
                {
                  "label": "Australia Central",
                  "value": "australiacentral"
                },
                {
                  "label": "Australia Central 2",
                  "value": "australiacentral2"
                },
                {
                  "label": "UAE Central",
                  "value": "uaecentral"
                },
                {
                  "label": "UAE North",
                  "value": "uaenorth"
                },
                {
                  "label": "South Africa North",
                  "value": "southafricanorth"
                },
                {
                  "label": "South Africa West",
                  "value": "southafricawest"
                },
                {
                  "label": "Switzerland North",
                  "value": "switzerlandnorth"
                },
                {
                  "label": "Switzerland West",
                  "value": "switzerlandwest"
                },
                {
                  "label": "Germany North",
                  "value": "germanynorth"
                },
                {
                  "label": "Germany West Central",
                  "value": "germanywestcentral"
                },
                {
                  "label": "Norway West",
                  "value": "norwaywest"
                },
                {
                  "label": "Norway East",
                  "value": "norwayeast"
                },
                {
                  "label": "Brazil Southeast",
                  "value": "brazilsoutheast"
                }
              ],
              "required": true
            },
            "visible": true
          },
          {
            "name": "gpuInstances",
            "type": "Microsoft.Common.Slider",
            "min": 1,
            "max": 100,
            "label": "GPU VM Instances Per Region",
            "subLabel": "VMs",
            "defaultValue": 3,
            "showStepMarkers": false,
            "toolTip": "Pick the number of GPU VM Instances per selected region that the UE4 or UE5 app and SS will be deployed across",
            "constraints": {
              "required": true
            },
            "visible": true
          },
          {
            "name": "instancesPerVM",
            "type": "Microsoft.Common.Slider",
            "min": 1,
            "max": 4,
            "label": "Streams Per GPU VM",
            "subLabel": "Streams",
            "defaultValue": 1,
            "showStepMarkers": true,
            "toolTip": "Pick the number of UE4 or UE5 instances running per GPU VM (test UE4 or UE5 app on your desired SKU to know GPU/Mem/CPU footprints). Pack more by reducing resolution and FPS",
            "constraints": {
              "required": true
            },
            "visible": true
          },
          {
            "name": "spotEnable",
            "type": "Microsoft.Common.CheckBox",
            "label": "Run with Azure Spot discount",
            "toolTip": "Azure Spot offers unused Azure capacity at a discounted rate versus pay as you go prices. Workloads should be tolerant to infrastructure loss as Azure may recall capacity for pay as you go workloads.  [Learn more about Azure Spot instances.](https://docs.microsoft.com/en-au/azure/virtual-machines/spot-vms)"
          },
          {
            "name": "spotEvictionType",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Eviction type",
            "defaultValue": "Capacity only",
            "toolTip": "Azure Spot offers two eviction methods: Up to pay as you go and max price. Up to pay as you go will allocate capacity to you until Azure requires the capacity for pay as you go workloads. Max price will allocate capacity to you until either the platform price is greater than your set max price, or until Azure requires the capacity for pay as you go workloads.  [Learn more about Azure Spot eviction types.](https://docs.microsoft.com/en-au/azure/virtual-machines/spot-vms#eviction-policy)",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Capacity only",
                  "value": "capacity"
                },
                {
                  "label": "Price or capacity",
                  "value": "price"
                }
              ],
              "required": "[equals(steps('scaleConfig').spotEnable, true)]"
            },
            "visible": "[equals(steps('scaleConfig').spotEnable, true)]"
          },
          {
            "name": "spotEvictionPolicy",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Eviction type",
            "defaultValue": "Delete",
            "toolTip": "Choose what happens to virtual machines that are evicted. Upon eviction, the VMs can either be stopped and deallocated if you plan to re-deploy or need access to the disk after eviction, or the VMs can be deleted to clean up the VMs and disks within the scale set.  [Learn more about low priority eviction policy.](https://docs.microsoft.com/en-au/azure/virtual-machines/spot-vms#eviction-policy)",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Stop / Deallocate",
                  "value": "Deallocate"
                },
                {
                  "label": "Delete",
                  "value": "Delete"
                }
              ],
              "required": "[equals(steps('scaleConfig').spotEnable, true)]"
            },
            "visible": "[equals(steps('scaleConfig').spotEnable, true)]"
          },
          {
            "name": "spotRestorePolicy",
            "type": "Microsoft.Common.CheckBox",
            "label": "Try to restore instances",
            "toolTip": "Improve runtime by attempting to restore instances for a period of time after eviction.  [Learn more](https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/use-spot#try--restore-preview)",
            "visible": "[equals(steps('scaleConfig').spotEnable, true)]"
          },
          {
            "name": "spotRestoreTimeout",
            "type": "Microsoft.Common.Slider",
            "min": 30,
            "max": 2880,
            "label": "Restore timeout",
            "subLabel": "Minutes",
            "defaultValue": 60,
            "showStepMarkers": false,
            "toolTip": "Timeout value after which the platform will not try to restore the VMSS SPOT instances.",
            "constraints": {
              "required": "[equals(steps('scaleConfig').spotRestorePolicy, true)]"
            },
            "visible": "[equals(steps('scaleConfig').spotRestorePolicy, true)]"
          },
          {
            "name": "spotMaxPrice",
            "type": "Microsoft.Common.TextBox",
            "label": "Maximum price you want to pay per hour (USD)",
            "toolTip": "Choose the maximum price per hour you are willing to pay for a single instance of the selected virtual machine size. While your selected price is greater than the platform price and Azure has excess capacity, you will be allocated capacity. Azure Spot prices are in USD ($) only.  [Learn more about Azure Spot maximum price.](https://docs.microsoft.com/en-au/azure/virtual-machines/spot-vms#pricing)",
            "defaultValue": "0.01",
            "constraints": {
              "required": "[and(equals(steps('scaleConfig').spotEnable, true), equals(steps('scaleConfig').spotEvictionType, 'price'))]",
              "validations": [
                {
                  "regex": "^([0-9]+\\.?[0-9]*|\\.[0-9]+){1}$",
                  "message": "Please enter a valid number."
                }
              ]
            },
            "visible": "[and(equals(steps('scaleConfig').spotEnable, true), equals(steps('scaleConfig').spotEvictionType, 'price'))]"
          },
          {
            "name": "autoscaleInfoBox",
            "type": "Microsoft.Common.InfoBox",
            "visible": true,
            "options": {
              "icon": "Info",
              "text": "Below are the properties needed to allow autoscaling of the GPU and Signalling Server compute. By checking the box below you will turn on the custom functionality to scale up and down the available streams (GPU VMs) according to the policies below.  Click here to review each policy in detail.",
              "uri": "https://github.com/Azure/Unreal-Pixel-Streaming#autoscaling-configuration"
            }
          },
          {
            "name": "enableAutoScaling",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Auto-scaling",
            "toolTip": "Set to Enable if you want the Matchmakers to handle autoscaling of the GPU instances for you, depending on the load.",
            "defaultValue": "Enable",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Enable",
                  "value": true
                },
                {
                  "label": "Disable",
                  "value": false
                }
              ],
              "required": false
            }
          },
          {
            "name": "percentBuffer",
            "type": "Microsoft.Common.Slider",
            "min": 0,
            "max": 100,
            "label": "Percent Buffer Required Before Scale",
            "subLabel": "%",
            "defaultValue": 25,
            "showStepMarkers": false,
            "toolTip": "Choose the percentage of streams (UE4 or UE5 App instances) that must be available otherwise a scale-out operation will happen to maintain at least this buffer so users don't have to wait for spinning up new VMs as load increases. Choose 0 to ignore this policy.",
            "constraints": {
              "required": true
            },
            "visible": "[equals(steps('scaleConfig').enableAutoScaling, true)]"
          },
          {
            "name": "instanceCountBuffer",
            "type": "Microsoft.Common.TextBox",
            "label": "Instance Count Buffer Required Before Scale",
            "toolTip": "Set the number of streams (UE4 or UE5 App instances) that must be available otherwise a scale-out operation will happen to maintain at least this buffer so users don't have to wait for spinning up new VMs as load increases. Set to 0 to ignore this policy.",
            "defaultValue": "1",
            "constraints": {
              "required": true,
              "validations": [
                {
                  "regex": "^(?:[1-9]|\\d{2,3}|[1-4]\\d{3}|5000){1,4}$",
                  "message": "Only numbers between 0 and 5000"
                }
              ]
            },
            "visible": "[equals(steps('scaleConfig').enableAutoScaling, true)]"
          },
          {
            "name": "minMinutesBetweenScaledowns",
            "type": "Microsoft.Common.TextBox",
            "label": "Idle Minutes Before Scale-Down",
            "toolTip": "Set the number of minutes where a new scale up operation hasn't occurred before evaluating scaling down to a minimum buffer count.",
            "defaultValue": "60",
            "constraints": {
              "required": true,
              "validations": [
                {
                  "regex": "^(?:[1-9]|\\d{2,3}|[1-4]\\d{3}|5000){1,5}$",
                  "message": "Only numbers between 0 and 10000"
                }
              ]
            },
            "visible": "[equals(steps('scaleConfig').enableAutoScaling, true)]"
          },
          {
            "name": "scaleDownByAmount",
            "type": "Microsoft.Common.TextBox",
            "label": "Scale Down Amount",
            "toolTip": "The maximum amount of nodes to scale down by, in case a scale down is happening.",
            "defaultValue": "1",
            "constraints": {
              "required": true,
              "validations": [
                {
                  "regex": "^(?:[1-9]|\\d{2,3}|[1-4]\\d{3}|5000){1,5}$",
                  "message": "Only numbers between 0 and 10000"
                }
              ]
            },
            "visible": "[equals(steps('scaleConfig').enableAutoScaling, true)]"
          },
          {
            "name": "minInstanceCount",
            "type": "Microsoft.Common.TextBox",
            "label": "Min Instance Count While Idle",
            "toolTip": "Set the minimum number of streams (UE4 or UE5 App Instances) that the solution will scale down to during an idle period (i.e., low activity periods like night time)",
            "defaultValue": "1",
            "constraints": {
              "required": true,
              "validations": [
                {
                  "regex": "^(?:[1-9]|\\d{2,3}|[1-4]\\d{3}|5000){1,4}$",
                  "message": "Only numbers between 0 and 5000"
                }
              ]
            },
            "visible": "[equals(steps('scaleConfig').enableAutoScaling, true)]"
          },
          {
            "name": "maxInstanceCount",
            "type": "Microsoft.Common.TextBox",
            "label": "Max Node Scale Count",
            "toolTip": "Set the maximum number of GPU VMs containing the streams (UE4 or UE5 App Instances) that will be scaled out (be sure to check your GPU SKU quotas in each selected region).",
            "defaultValue": "20",
            "constraints": {
              "required": true,
              "validations": [
                {
                  "regex": "^(?:[1-9]|\\d{2,3}|[1-4]\\d{3}|5000){1,4}$",
                  "message": "Only numbers between 0 and 5000"
                }
              ]
            },
            "visible": "[equals(steps('scaleConfig').enableAutoScaling, true)]"
          }
        ]
      },
      {
        "name": "streamConfig",
        "label": "Stream Configs",
        "subLabel": {
          "preValidation": "Configure the streaming properties",
          "postValidation": "Done"
        },
        "bladeTitle": "Stream Configs",
        "elements": [
          {
            "name": "resolutionWidth",
            "type": "Microsoft.Common.TextBox",
            "label": "UE App resolution width",
            "toolTip": "Set the resolution width of the UE4 or UE5 3D application. The lower the resolution the less resources it uses on the VM, allowing to pack more streams.",
            "defaultValue": "1920",
            "constraints": {
              "required": true,
              "validations": [
                {
                  "regex": "^(?:[1-9]|\\d{2,3}|[1-4]\\d{3}|5120){1,4}$",
                  "message": "Only numbers between 0 and 5120"
                }
              ]
            }
          },
          {
            "name": "resolutionHeight",
            "type": "Microsoft.Common.TextBox",
            "label": "UE App resolution height",
            "toolTip": "Set the resolution height of the UE4 or UE5 3D application. The lower the resolution the less resources it uses on the VM, allowing to pack more streams.",
            "defaultValue": "1080",
            "constraints": {
              "required": true,
              "validations": [
                {
                  "regex": "^(?:[1-9]|\\d{2,3}|[1-4]\\d{3}|2160){1,4}$",
                  "message": "Only numbers between 0 and 2160"
                }
              ]
            }
          },
          {
            "name": "framesPerSecond",
            "type": "Microsoft.Common.TextBox",
            "label": "Frames Per Second",
            "toolTip": "Set the maximum number of frames per second (FPS) the UE4 or UE5 App will run at. The lower the number the lower resource utilization on the GPU VM and network which can help for packing more streams per VM to save costs.",
            "defaultValue": "60",
            "constraints": {
              "required": true,
              "validations": [
                {
                  "regex": "^([0-9]|([1-9][0-9])|100){1,3}$",
                  "message": "Only numbers between 0 and 100"
                }
              ]
            }
          }
        ]
      },
      {
        "name": "securityConfig",
        "label": "Security",
        "subLabel": {
          "preValidation": "Configure the security settings",
          "postValidation": "Done"
        },
        "bladeTitle": "Security Settings",
        "elements": [
          {
            "name": "enablePixelStreamingCommands",
            "type": "Microsoft.Common.CheckBox",
            "label": "Enable AllowPixelStreamingCommands option",
            "toolTip": "Determines whether the player Web page can use the emitCommand() function to execute console commands in the Unreal Engine remotely. Note that this may have security implications.",
            "constraints": {
                "required": false
            },
            "visible": true
          },
          {
            "name": "enableCustomDomain",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Use Custom Domain",
            "toolTip": "If you have a custom domain, hosted in the same subscription as this deployment, and want to use it for this solution, choose Enable.",
            "defaultValue": "Disable",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Enable",
                  "value": true
                },
                {
                  "label": "Disable",
                  "value": false
                }
              ],
              "required": false
            }
          },
          {
            "name": "enableDnsInfoBox",
            "type": "Microsoft.Common.InfoBox",
            "options": {
              "icon": "Info",
              "text": "The DNS needs to be managed by AzureDNS, and the Managed Service Identity of the VMSS will get write-access on the DNS."
            },
            "visible": "[equals(steps('securityConfig').enableCustomDomain, true)]"
          },
          {
            "name": "dnsConfig",
            "type": "Microsoft.Solutions.ResourceSelector",
            "label": "Select DNS configuration",
            "toolTip": "Select the Azure DNS resource from the picker. The Azure DNS resource needs to be in the same subscription as you have selected in the first blade (basics).",
            "resourceType": "Microsoft.Network/dnszones",
            "options": {
              "filter": {
                "subscription": "onBasics",
                "location": "all"
              }
            },
            "visible": "[equals(steps('securityConfig').enableCustomDomain, true)]"
          },
          {
            "name": "tmSubdomainName",
            "type": "Microsoft.Common.TextBox",
            "label": "Traffic Manager Subdomain Name",
            "toolTip": "This is the subdomain name that will be appended to the random string, and will create the FQDN to reach your Traffic Manager on your custom domain.",
            "constraints": {
              "required": false,
              "validations": [
                {
                  "regex": "^[a-zA-Z0-9]{1,}$",
                  "message": "Can only contain letters and numbers, no spaces"
                }
              ]
            },
            "visible": "[equals(steps('securityConfig').enableCustomDomain, true)]"
          },
          {
            "name": "enableHttps",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Enable HTTPS",
            "toolTip": "If HTTPS is required, and you have the base64 representation of the public and private key from the wildcard certificate, choose Enable.",
            "defaultValue": "Disable",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Enable",
                  "value": true
                },
                {
                  "label": "Disable",
                  "value": false
                }
              ]
            }
          },
          {
            "name": "enableHttpsInfoBox",
            "type": "Microsoft.Common.InfoBox",
            "options": {
              "icon": "Info",
              "text": "Below are the properties needed to enable HTTPS. The certificates will be stored in the KeyVault and fetched by the VMs."
            },
            "visible": "[equals(steps('securityConfig').enableHttps, true)]"
          },
          {
            "name": "httpsPublicKey",
            "type": "Microsoft.Common.TextBox",
            "label": "Base64 encoded Public key",
            "toolTip": "Base64 encoded Public key for HTTPS Wildcard certificate",
            "multiLine": true,
            "constraints": {
              "required": "[equals(steps('securityConfig').enableHttps, true)]",
              "validations": [
                {
                  "regex": "^[a-zA-Z0-9=]{1,}$",
                  "message": "Can only contain letters, numbers and the equal sign"
                }
              ]
            },
            "visible": "[equals(steps('securityConfig').enableHttps, true)]"
          },
          {
            "name": "httpsPrivateKey",
            "type": "Microsoft.Common.TextBox",
            "label": "Base64 encoded Private key",
            "toolTip": "Base64 encoded Private key for HTTPS Wildcard certificate",
            "multiLine": true,
            "constraints": {
              "required": "[equals(steps('securityConfig').enableHttps, true)]",
              "validations": [
                {
                  "regex": "^[a-zA-Z0-9=]{1,}$",
                  "message": "Can only contain letters, numbers and the equal sign"
                }
              ]
            },
            "visible": "[equals(steps('securityConfig').enableHttps, true)]"
          },
          {
            "name": "enableAuthOnSS",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Enable Auth on Signalling Server",
            "toolTip": "Enable Authentication on Signalling Server",
            "defaultValue": "Disable",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Enable",
                  "value": true
                },
                {
                  "label": "Disable",
                  "value": false
                }
              ]
            },
            "visible": "[equals(steps('securityConfig').enableHttps, true)]"
          }
        ]
      },
      {
        "name": "networkConfig",
        "label": "Networking",
        "subLabel": {
          "preValidation": "Configure the network settings",
          "postValidation": "Done"
        },
        "bladeTitle": "Network Settings",
        "elements": [
          {
            "name": "enableExistingVnets",
            "type": "Microsoft.Common.CheckBox",
            "label": "Click here to use the existing VNets",
            "toolTip": "Click here to use the existing VNets",
            "constraints": {
                "required": false
            }
          },
          {
            "name": "regionVNetApi",
            "type": "Microsoft.Solutions.ArmApiControl",
            "request": {
                "method": "GET",
                "path": "[concat(subscription().id, '/providers/Microsoft.Network/virtualNetworks?api-version=2021-08-01')]"
            }
          },
          {
            "name": "region1Vnet",
            "type": "Microsoft.Common.DropDown",
            "toolTip": "[concat('Select Vnet for ', first(skip(steps('scaleConfig').regionsSelected, 0)))]",
            "label": "[concat('Select Vnet for ', first(skip(steps('scaleConfig').regionsSelected, 0)))]",
            "filter": true,
            "constraints": {
                "allowedValues": "[map(filter(steps('networkConfig').regionVNetApi.value, (item) => equals(item.location, first(skip(steps('scaleConfig').regionsSelected, 0)))), (item) => parse(concat('{\"label\":\"',item.name,'\",\"value\":{\"name\":\"',item.name,'\",\"id\":\"',item.id,'\",\"addressprefixes\":\"',item.properties.addressSpace.addressPrefixes, '\"}}')))]",
                "required": false
            },
            "visible": "[and(greaterOrEquals(length(steps('scaleConfig').regionsSelected), 1), equals(steps('networkConfig').enableExistingVnets, true))]"
          },
          {
            "name": "region1Subnets",
            "type": "Microsoft.Solutions.ArmApiControl",
            "request": {
                "method": "GET",
                "path": "[concat(subscription().id, '/resourceGroups/', last(take(split(steps('networkConfig').region1Vnet.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('networkConfig').region1Vnet.name,'/subnets?api-version=2022-01-01')]"
            }
          },
          {
            "name": "region1Subnet",
            "type": "Microsoft.Common.DropDown",
            "toolTip": "[concat('Select Subnet for ', first(skip(steps('scaleConfig').regionsSelected, 0)))]",
            "label": "[concat('Select Subnet for ', first(skip(steps('scaleConfig').regionsSelected, 0)))]",
            "filter": true,
            "constraints": {
                "allowedValues": "[map(steps('networkConfig').region1Subnets.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.name, '\"}')))]",
                "required": false
            },
            "visible": "[and(greaterOrEquals(length(steps('scaleConfig').regionsSelected), 1), equals(steps('networkConfig').enableExistingVnets, true))]"
          },
          {
            "name": "region2Vnet",
            "type": "Microsoft.Common.DropDown",
            "toolTip": "[concat('Select Vnet for ', first(skip(steps('scaleConfig').regionsSelected, 1)))]",
            "label": "[concat('Select Vnet for ', first(skip(steps('scaleConfig').regionsSelected, 1)))]",
            "filter": true,
            "constraints": {
                "allowedValues": "[map(filter(steps('networkConfig').regionVNetApi.value, (item) => equals(item.location, first(skip(steps('scaleConfig').regionsSelected, 1)))), (item) => parse(concat('{\"label\":\"',item.name,'\",\"value\":{\"name\":\"',item.name,'\",\"id\":\"',item.id,'\",\"addressprefixes\":\"',item.properties.addressSpace.addressPrefixes, '\"}}')))]",
                "required": false
            },
            "visible": "[and(greaterOrEquals(length(steps('scaleConfig').regionsSelected), 2), equals(steps('networkConfig').enableExistingVnets, true))]"
          },
          {
            "name": "region2Subnets",
            "type": "Microsoft.Solutions.ArmApiControl",
            "request": {
                "method": "GET",
                "path": "[concat(subscription().id, '/resourceGroups/', last(take(split(steps('networkConfig').region2Vnet.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('networkConfig').region2Vnet.name,'/subnets?api-version=2022-01-01')]"
            }
          },
          {
            "name": "region2Subnet",
            "type": "Microsoft.Common.DropDown",
            "toolTip": "[concat('Select Subnet for ', first(skip(steps('scaleConfig').regionsSelected, 1)))]",
            "label": "[concat('Select Subnet for ', first(skip(steps('scaleConfig').regionsSelected, 1)))]",
            "filter": true,
            "constraints": {
                "allowedValues": "[map(steps('networkConfig').region2Subnets.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.name, '\"}')))]",
                "required": false
            },
            "visible": "[and(greaterOrEquals(length(steps('scaleConfig').regionsSelected), 2), equals(steps('networkConfig').enableExistingVnets, true))]"
          },
          {
            "name": "region3Vnet",
            "type": "Microsoft.Common.DropDown",
            "toolTip": "[concat('Select Vnet for ', first(skip(steps('scaleConfig').regionsSelected, 2)))]",
            "label": "[concat('Select Vnet for ', first(skip(steps('scaleConfig').regionsSelected, 2)))]",
            "filter": true,
            "constraints": {
                "allowedValues": "[map(filter(steps('networkConfig').regionVNetApi.value, (item) => equals(item.location, first(skip(steps('scaleConfig').regionsSelected, 2)))), (item) => parse(concat('{\"label\":\"',item.name,'\",\"value\":{\"name\":\"',item.name,'\",\"id\":\"',item.id,'\",\"addressprefixes\":\"',item.properties.addressSpace.addressPrefixes, '\"}}')))]",
                "required": false
            },
            "visible": "[and(greaterOrEquals(length(steps('scaleConfig').regionsSelected), 3), equals(steps('networkConfig').enableExistingVnets, true))]"
          },
          {
            "name": "region3Subnets",
            "type": "Microsoft.Solutions.ArmApiControl",
            "request": {
                "method": "GET",
                "path": "[concat(subscription().id, '/resourceGroups/', last(take(split(steps('networkConfig').region3Vnet.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('networkConfig').region3Vnet.name,'/subnets?api-version=2022-01-01')]"
            }
          },
          {
            "name": "region3Subnet",
            "type": "Microsoft.Common.DropDown",
            "toolTip": "[concat('Select Subnet for ', first(skip(steps('scaleConfig').regionsSelected, 2)))]",
            "label": "[concat('Select Subnet for ', first(skip(steps('scaleConfig').regionsSelected, 2)))]",
            "filter": true,
            "constraints": {
                "allowedValues": "[map(steps('networkConfig').region3Subnets.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.name, '\"}')))]",
                "required": false
            },
            "visible": "[and(greaterOrEquals(length(steps('scaleConfig').regionsSelected), 3), equals(steps('networkConfig').enableExistingVnets, true))]"
          },
          {
            "name": "region4Vnet",
            "type": "Microsoft.Common.DropDown",
            "toolTip": "[concat('Select Vnet for ', first(skip(steps('scaleConfig').regionsSelected, 3)))]",
            "label": "[concat('Select Vnet for ', first(skip(steps('scaleConfig').regionsSelected, 3)))]",
            "filter": true,
            "constraints": {
                "allowedValues": "[map(filter(steps('networkConfig').regionVNetApi.value, (item) => equals(item.location, first(skip(steps('scaleConfig').regionsSelected, 3)))), (item) => parse(concat('{\"label\":\"',item.name,'\",\"value\":{\"name\":\"',item.name,'\",\"id\":\"',item.id,'\",\"addressprefixes\":\"',item.properties.addressSpace.addressPrefixes, '\"}}')))]",
                "required": false
            },
            "visible": "[and(greaterOrEquals(length(steps('scaleConfig').regionsSelected), 4), equals(steps('networkConfig').enableExistingVnets, true))]"
          },
          {
            "name": "region4Subnets",
            "type": "Microsoft.Solutions.ArmApiControl",
            "request": {
                "method": "GET",
                "path": "[concat(subscription().id, '/resourceGroups/', last(take(split(steps('networkConfig').region4Vnet.id, '/'), 5)), '/providers/Microsoft.Network/virtualNetworks/', steps('networkConfig').region4Vnet.name,'/subnets?api-version=2022-01-01')]"
            }
          },
          {
            "name": "region4Subnet",
            "type": "Microsoft.Common.DropDown",
            "toolTip": "[concat('Select Subnet for ', first(skip(steps('scaleConfig').regionsSelected, 3)))]",
            "label": "[concat('Select Subnet for ', first(skip(steps('scaleConfig').regionsSelected, 3)))]",
            "filter": true,
            "constraints": {
                "allowedValues": "[map(steps('networkConfig').region4Subnets.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.name, '\"}')))]",
                "required": false
            },
            "visible": "[and(greaterOrEquals(length(steps('scaleConfig').regionsSelected), 4), equals(steps('networkConfig').enableExistingVnets, true))]"
          },
          {
            "name": "matchmakerPublicPort",
            "type": "Microsoft.Common.TextBox",
            "label": "Matchmaker Public Port",
            "toolTip": "Set the user facing port for a user to access the Matchmaker. Most users will leave this as the default to 80 to avoid a user having to enter a port to access the solution.",
            "defaultValue": "80",
            "constraints": {
              "required": true,
              "validations": [
                {
                  "regex": "^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]){1,5}$",
                  "message": "Only numbers between 1 and 65535"
                }
              ]
            }
          },
          {
            "name": "matchmakerInternalApiPort",
            "type": "Microsoft.Common.TextBox",
            "label": "Matchmaker Internal API Port",
            "toolTip": "Set the internal port for the Internal API to run on, exposed only internal to the VNET (not user facing). Most users will leave this as the default",
            "defaultValue": "81",
            "constraints": {
              "required": true,
              "validations": [
                {
                  "regex": "^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]){1,5}$",
                  "message": "Only numbers between 1 and 65535"
                }
              ]
            }
          },
          {
            "name": "matchmakerInternalPort",
            "type": "Microsoft.Common.TextBox",
            "label": "Matchmaker Internal Port",
            "toolTip": "Set the internal port for the Signalling Server and Matchmaker port to communicate (not user facing). Most users will leave this as the default",
            "defaultValue": "9999",
            "constraints": {
              "required": true,
              "validations": [
                {
                  "regex": "^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]){1,5}$",
                  "message": "Only numbers between 1 and 65535"
                }
              ]
            }
          },
          {
            "name": "pixelStreamingPort",
            "type": "Microsoft.Common.TextBox",
            "label": "Pixel Streaming Internal Port",
            "toolTip": "Set the internal port for the Signalling Server and UE4 or UE5 App to communicate for the stream (not user facing). Most users will leave this as the default. If InstancesPerNode is more than 1, this will be the starting IP range and add 1 to this for each instance on the GPU VM.",
            "defaultValue": "8888",
            "constraints": {
              "required": true,
              "validations": [
                {
                  "regex": "^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]){1,5}$",
                  "message": "Only numbers between 1 and 65535"
                }
              ]
            }
          },
          {
            "name": "stunAndTurnSection",
            "type": "Microsoft.Common.InfoBox",
            "visible": true,
            "options": {
              "icon": "Info",
              "text": "Below you can configure your STUN and TURN Server.",
              "uri": "https://docs.unrealengine.com/4.27/en-US/SharingAndReleasing/PixelStreaming/Hosting/"
            }
          },
          {
            "name": "stunServerAddress",
            "type": "Microsoft.Common.TextBox",
            "label": "STUN Server Address",
            "toolTip": "When a STUN Server is needed, please insert the address here. The default STUN Server is pointing to Google.",
            "defaultValue": "stun:stun.l.google.com:19302",
            "constraints": {
              "required": false,
              "validations": [
                {
                  "regex": "^stun:[a-z0-9\\.\\-]*:[0-9]{1,5}$",
                  "message": "Should be stun:your.address.here:123"
                }
              ]
            }
          },
          {
            "name": "turnServerAddress",
            "type": "Microsoft.Common.TextBox",
            "label": "TURN Server Address",
            "toolTip": "When a TURN Server is needed, please insert the address here.",
            "defaultValue": "",
            "constraints": {
              "required": false,
              "validations": [
                {
                  "regex": "^turn:[a-z0-9\\.\\-]*:[0-9]{1,5}$",
                  "message": "Should be turn:your.address.here:123"
                }
              ]
            }
          },
          {
            "name": "turnPasswordWarning",
            "type": "Microsoft.Common.InfoBox",
            "visible": true,
            "options": {
              "icon": "Warning",
              "text": "Be aware that the password for the TURN Server will be shared to the client publicly. So if you are deploying the solution with a TURN server that is public to the internet, you might want to choose a different authentication mechanism."
            }
          },
          {
            "name": "turnUsername",
            "type": "Microsoft.Common.TextBox",
            "label": "TURN Server Username",
            "toolTip": "The Username to use the TURN Server.",
            "defaultValue": "",
            "constraints": {
              "required": false,
              "validations": [
                {
                  "regex": "^.{4,}$",
                  "message": "Any character, minimum 4 length"
                }
              ]
            }
          },
          {
            "name": "turnPassword",
            "type": "Microsoft.Common.TextBox",
            "label": "TURN Server Password",
            "toolTip": "The Password to use the TURN Server.",
            "defaultValue": "",
            "constraints": {
              "required": false,
              "validations": [
                {
                  "regex": "^.{6,}$",
                  "message": "Any character, minimum 6 length"
                }
              ]
            }
          }
        ]
      },
      {
        "name": "dashboard",
        "label": "Admin Dashboard",
        "elements": [
          {
            "name": "dashboardTextBlock",
            "type": "Microsoft.Common.TextBlock",
            "visible": true,
            "options": {
              "text": "The Admin Dashboard allows you to do lifecycle management of your deployment and get insights on its usage and health. The dashboard is secured by the AAD tenant of your deployment, and it expects an AAD App Registration to exist already. It is not possible to enable the Admin Dashboard post-deployment."
            }
          },
          {
            "name": "enableDashboardInfoBox",
            "type": "Microsoft.Common.InfoBox",
            "visible": true,
            "options": {
              "icon": "Info",
              "text": "If the Admin Dashboard is enabled, it is mandatory to supply the app's Client ID below. Post-deployment, you will need to add the dashboard callback URL as a redirect URI to your registered AAD application. For more information on registering an app, please click [this box].",
              "uri": "https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app"
            }
          },
          {
            "name": "enableDashboard",
            "type": "Microsoft.Common.OptionsGroup",
            "label": "Enable the Admin Dashboard",
            "toolTip": "The Admin Dashboard provides a GUI for showing telemetry, updating settings and creating users. Choose Enable to have the Admin Dashboard deployed.",
            "defaultValue": "Disable",
            "constraints": {
              "allowedValues": [
                {
                  "label": "Enable",
                  "value": true
                },
                {
                  "label": "Disable",
                  "value": false
                }
              ],
              "required": false
            }
          },
          {
            "name": "aadClientId",
            "type": "Microsoft.Common.TextBox",
            "label": "Azure AD Application Client ID",
            "toolTip": "Client ID of the Azure AD application that is used to create a secure Admin Dashboard environment. Post-deployment, you will need to add the dashboard callback URL as a redirect URI to your registered Azure AD application.",
            "visible": "[equals(steps('dashboard').enableDashboard, true)]",
            "constraints": {
              "required": "[equals(steps('dashboard').enableDashboard, true)]",
              "regex": "^([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1,1}$",
              "validationMessage": "Has to be a valid GUID"
            }
          }
        ]
      },
      {
        "name": "tags",
        "label": "Tags",
        "elements": [
          {
            "name": "tagsByResource",
            "type": "Microsoft.Common.TagsByResource",
            "toolTip": "Add tags to resources that will be deployed",
            "resources": [
              "Microsoft.Storage/storageAccounts",
              "Microsoft.Compute/virtualMachines"
            ]
          }
        ]
      }
    ],
    "outputs": {
      "location": "[location()]",
      "basics_vmSizeSignalServer": "[basics('vmSizeSS')]",
      "basics_vmSizeMatchMaker": "[basics('vmSizeMM')]",
      "basics_pixelStreamZip": "[basics('storageBlobSelection')]",
      "basics_userModifications": "[basics('modificationsCheckBox')]",
      "basics_adminName": "[basics('adminUsername')]",
      "basics_adminPass": "[basics('adminPassword').password]",
      "basics_customImage": "[if(equals(basics('customImage').id, ''), parse('{}'), basics('customImage'))]",
      "scale_regionsSelectedAsString": "[string(steps('scaleConfig').regionsSelected)]",
      "scale_gpuInstances": "[steps('scaleConfig').gpuInstances]",
      "scale_instancesPerVM": "[steps('scaleConfig').instancesPerVM]",
      "scale_spotEnable": "[steps('scaleConfig').spotEnable]",
      "scale_spotEvictionPolicy": "[steps('scaleConfig').spotEvictionPolicy]",
      "scale_spotRestorePolicy": "[steps('scaleConfig').spotRestorePolicy]",
      "scale_spotRestoreTimeout": "[steps('scaleConfig').spotRestoreTimeout]",
      "scale_spotEvictionType": "[steps('scaleConfig').spotEvictionType]",
      "scale_spotMaxPrice": "[steps('scaleConfig').spotMaxPrice]",
      "scale_enableAutoScale": "[steps('scaleConfig').enableAutoScaling]",
      "scale_percentBuffer": "[steps('scaleConfig').percentBuffer]",
      "scale_instanceCountBuffer": "[steps('scaleConfig').instanceCountBuffer]",
      "scale_minMinutesBetweenScaledowns": "[steps('scaleConfig').minMinutesBetweenScaledowns]",
      "scale_scaleDownByAmount": "[steps('scaleConfig').scaleDownByAmount]",
      "scale_minInstanceCount": "[steps('scaleConfig').minInstanceCount]",
      "scale_maxInstanceCount": "[steps('scaleConfig').maxInstanceCount]",
      "stream_resolutionWidth": "[steps('streamConfig').resolutionWidth]",
      "stream_resolutionHeight": "[steps('streamConfig').resolutionHeight]",
      "stream_framesPerSecond": "[steps('streamConfig').framesPerSecond]",
      "security_enablePixelStreamingCommands": "[steps('securityConfig').enablePixelStreamingCommands]",
      "security_tmSubdomainName": "[steps('securityConfig').tmSubdomainName]",
      "security_dnsConfig": "[if(equals(steps('securityConfig').dnsConfig.name, ''), parse('{}'), steps('securityConfig').dnsConfig)]",
      "security_enableHttps": "[steps('securityConfig').enableHttps]",
      "security_httpsPublicKey": "[steps('securityConfig').httpsPublicKey]",
      "security_httpsPrivateKey": "[steps('securityConfig').httpsPrivateKey]",
      "security_enableAuthOnSS": "[steps('securityConfig').enableAuthOnSS]",
      "region1Vnet": "[if(equals(steps('networkConfig').region1Vnet.name, ''), parse('{}'), steps('networkConfig').region1Vnet)]",
      "region2Vnet": "[if(equals(steps('networkConfig').region2Vnet.name, ''), parse('{}'), steps('networkConfig').region2Vnet)]",
      "region3Vnet": "[if(equals(steps('networkConfig').region3Vnet.name, ''), parse('{}'), steps('networkConfig').region3Vnet)]",
      "region4Vnet": "[if(equals(steps('networkConfig').region4Vnet.name, ''), parse('{}'), steps('networkConfig').region4Vnet)]",
      "region1Subnet": "[string(steps('networkConfig').region1Subnet)]",
      "region2Subnet": "[string(steps('networkConfig').region2Subnet)]",
      "region3Subnet": "[string(steps('networkConfig').region3Subnet)]",
      "region4Subnet": "[string(steps('networkConfig').region4Subnet)]",
      "network_matchmakerPublicPort": "[steps('networkConfig').matchmakerPublicPort]",
      "network_matchmakerInternalApiPort": "[steps('networkConfig').matchmakerInternalApiPort]",
      "network_matchmakerInternalPort": "[steps('networkConfig').matchmakerInternalPort]",
      "network_pixelStreamingPort": "[steps('networkConfig').pixelStreamingPort]",
      "network_stunServerAddress": "[steps('networkConfig').stunServerAddress]",
      "network_turnServerAddress": "[steps('networkConfig').turnServerAddress]",
      "network_turnUsername": "[steps('networkConfig').turnUsername]",
      "network_turnPassword": "[steps('networkConfig').turnPassword]",
      "dashboard_enable": "[steps('dashboard').enableDashboard]",
      "dashboard_aadClientId": "[steps('dashboard').aadClientId]"
    }
  }
}
